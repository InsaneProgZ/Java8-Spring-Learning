swagger: "2.0"
info:
  description: "Esse projeto tem como objetivo demonstrar na prática os conteúdos estudados pelo Yan Zingra Pereira"
  version: "0.0.1"
  title: "Lerning Project"
  contact:
    email: "yan.zingra12@gmail.com"

host: "127.0.0.1"
basePath: "/user"


paths:
  /user:
    get:
      tags:
        - "user"
      summary: "Return users"
      description: "Return a array of users"
      operationId: "getUsers"
      produces:
        - "application/json"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/UserList"
        "500":
          description: "Internal Server Error"
        "404":
          description: "Nenhum usuário foi encontrado"
        "400":
          description: "bad request"

  /user/{id}:
    get:
      tags:
        - "user"
      summary: "Return user of a specifc id"
      operationId: "placeOrder"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of pet that needs to be fetched"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Bad request"

    delete:
      tags:
        - "user"
      summary: "Delete user by ID"
      description: "Delete a user with ID"
      operationId: "deleteOrder"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the order that needs to be deleted"
          required: true
          type: "integer"
          format: "int"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Order not found"


openapi:
components:
definitions:

  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        description: "Descreve a atual situação do usuário"
    xml:
      name: "User"

  UserList:
    type: "array"
    items:
      $ref: "#/definitions/User"
